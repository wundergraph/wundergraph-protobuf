// source: wundernode_config.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.wgpb.Api', null, global);
goog.exportSymbol('proto.wgpb.Config', null, global);
goog.exportSymbol('proto.wgpb.EngineConfiguration', null, global);
goog.exportSymbol('proto.wgpb.Host', null, global);
goog.exportSymbol('proto.wgpb.LogLevel', null, global);
goog.exportSymbol('proto.wgpb.Logging', null, global);
goog.exportSymbol('proto.wgpb.Operation', null, global);
goog.exportSymbol('proto.wgpb.Server', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wgpb.Config = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wgpb.Config.repeatedFields_, null);
};
goog.inherits(proto.wgpb.Config, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wgpb.Config.displayName = 'proto.wgpb.Config';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wgpb.Server = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wgpb.Server.repeatedFields_, null);
};
goog.inherits(proto.wgpb.Server, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wgpb.Server.displayName = 'proto.wgpb.Server';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wgpb.Host = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wgpb.Host, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wgpb.Host.displayName = 'proto.wgpb.Host';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wgpb.Logging = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wgpb.Logging, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wgpb.Logging.displayName = 'proto.wgpb.Logging';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wgpb.Api = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wgpb.Api.repeatedFields_, null);
};
goog.inherits(proto.wgpb.Api, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wgpb.Api.displayName = 'proto.wgpb.Api';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wgpb.Operation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wgpb.Operation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wgpb.Operation.displayName = 'proto.wgpb.Operation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wgpb.EngineConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wgpb.EngineConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wgpb.EngineConfiguration.displayName = 'proto.wgpb.EngineConfiguration';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wgpb.Config.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wgpb.Config.prototype.toObject = function(opt_includeInstance) {
  return proto.wgpb.Config.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wgpb.Config} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.Config.toObject = function(includeInstance, msg) {
  var f, obj = {
    server: (f = msg.getServer()) && proto.wgpb.Server.toObject(includeInstance, f),
    logging: (f = msg.getLogging()) && proto.wgpb.Logging.toObject(includeInstance, f),
    apisList: jspb.Message.toObjectList(msg.getApisList(),
    proto.wgpb.Api.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wgpb.Config}
 */
proto.wgpb.Config.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wgpb.Config;
  return proto.wgpb.Config.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wgpb.Config} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wgpb.Config}
 */
proto.wgpb.Config.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wgpb.Server;
      reader.readMessage(value,proto.wgpb.Server.deserializeBinaryFromReader);
      msg.setServer(value);
      break;
    case 2:
      var value = new proto.wgpb.Logging;
      reader.readMessage(value,proto.wgpb.Logging.deserializeBinaryFromReader);
      msg.setLogging(value);
      break;
    case 3:
      var value = new proto.wgpb.Api;
      reader.readMessage(value,proto.wgpb.Api.deserializeBinaryFromReader);
      msg.addApis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wgpb.Config.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wgpb.Config.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wgpb.Config} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.Config.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wgpb.Server.serializeBinaryToWriter
    );
  }
  f = message.getLogging();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wgpb.Logging.serializeBinaryToWriter
    );
  }
  f = message.getApisList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.wgpb.Api.serializeBinaryToWriter
    );
  }
};


/**
 * optional Server server = 1;
 * @return {?proto.wgpb.Server}
 */
proto.wgpb.Config.prototype.getServer = function() {
  return /** @type{?proto.wgpb.Server} */ (
    jspb.Message.getWrapperField(this, proto.wgpb.Server, 1));
};


/**
 * @param {?proto.wgpb.Server|undefined} value
 * @return {!proto.wgpb.Config} returns this
*/
proto.wgpb.Config.prototype.setServer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wgpb.Config} returns this
 */
proto.wgpb.Config.prototype.clearServer = function() {
  return this.setServer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wgpb.Config.prototype.hasServer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Logging logging = 2;
 * @return {?proto.wgpb.Logging}
 */
proto.wgpb.Config.prototype.getLogging = function() {
  return /** @type{?proto.wgpb.Logging} */ (
    jspb.Message.getWrapperField(this, proto.wgpb.Logging, 2));
};


/**
 * @param {?proto.wgpb.Logging|undefined} value
 * @return {!proto.wgpb.Config} returns this
*/
proto.wgpb.Config.prototype.setLogging = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wgpb.Config} returns this
 */
proto.wgpb.Config.prototype.clearLogging = function() {
  return this.setLogging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wgpb.Config.prototype.hasLogging = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Api apis = 3;
 * @return {!Array<!proto.wgpb.Api>}
 */
proto.wgpb.Config.prototype.getApisList = function() {
  return /** @type{!Array<!proto.wgpb.Api>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.wgpb.Api, 3));
};


/**
 * @param {!Array<!proto.wgpb.Api>} value
 * @return {!proto.wgpb.Config} returns this
*/
proto.wgpb.Config.prototype.setApisList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.wgpb.Api=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wgpb.Api}
 */
proto.wgpb.Config.prototype.addApis = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.wgpb.Api, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wgpb.Config} returns this
 */
proto.wgpb.Config.prototype.clearApisList = function() {
  return this.setApisList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wgpb.Server.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wgpb.Server.prototype.toObject = function(opt_includeInstance) {
  return proto.wgpb.Server.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wgpb.Server} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.Server.toObject = function(includeInstance, msg) {
  var f, obj = {
    listenAddr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hostsList: jspb.Message.toObjectList(msg.getHostsList(),
    proto.wgpb.Host.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wgpb.Server}
 */
proto.wgpb.Server.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wgpb.Server;
  return proto.wgpb.Server.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wgpb.Server} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wgpb.Server}
 */
proto.wgpb.Server.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setListenAddr(value);
      break;
    case 2:
      var value = new proto.wgpb.Host;
      reader.readMessage(value,proto.wgpb.Host.deserializeBinaryFromReader);
      msg.addHosts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wgpb.Server.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wgpb.Server.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wgpb.Server} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.Server.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListenAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.wgpb.Host.serializeBinaryToWriter
    );
  }
};


/**
 * optional string listen_addr = 1;
 * @return {string}
 */
proto.wgpb.Server.prototype.getListenAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wgpb.Server} returns this
 */
proto.wgpb.Server.prototype.setListenAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Host hosts = 2;
 * @return {!Array<!proto.wgpb.Host>}
 */
proto.wgpb.Server.prototype.getHostsList = function() {
  return /** @type{!Array<!proto.wgpb.Host>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.wgpb.Host, 2));
};


/**
 * @param {!Array<!proto.wgpb.Host>} value
 * @return {!proto.wgpb.Server} returns this
*/
proto.wgpb.Server.prototype.setHostsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.wgpb.Host=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wgpb.Host}
 */
proto.wgpb.Server.prototype.addHosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.wgpb.Host, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wgpb.Server} returns this
 */
proto.wgpb.Server.prototype.clearHostsList = function() {
  return this.setHostsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wgpb.Host.prototype.toObject = function(opt_includeInstance) {
  return proto.wgpb.Host.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wgpb.Host} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.Host.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    keyPem: jspb.Message.getFieldWithDefault(msg, 2, ""),
    certPem: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wgpb.Host}
 */
proto.wgpb.Host.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wgpb.Host;
  return proto.wgpb.Host.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wgpb.Host} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wgpb.Host}
 */
proto.wgpb.Host.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyPem(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCertPem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wgpb.Host.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wgpb.Host.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wgpb.Host} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.Host.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKeyPem();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCertPem();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.wgpb.Host.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wgpb.Host} returns this
 */
proto.wgpb.Host.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string key_pem = 2;
 * @return {string}
 */
proto.wgpb.Host.prototype.getKeyPem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wgpb.Host} returns this
 */
proto.wgpb.Host.prototype.setKeyPem = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string cert_pem = 3;
 * @return {string}
 */
proto.wgpb.Host.prototype.getCertPem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wgpb.Host} returns this
 */
proto.wgpb.Host.prototype.setCertPem = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wgpb.Logging.prototype.toObject = function(opt_includeInstance) {
  return proto.wgpb.Logging.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wgpb.Logging} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.Logging.toObject = function(includeInstance, msg) {
  var f, obj = {
    level: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wgpb.Logging}
 */
proto.wgpb.Logging.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wgpb.Logging;
  return proto.wgpb.Logging.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wgpb.Logging} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wgpb.Logging}
 */
proto.wgpb.Logging.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.wgpb.LogLevel} */ (reader.readEnum());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wgpb.Logging.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wgpb.Logging.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wgpb.Logging} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.Logging.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional LogLevel level = 1;
 * @return {!proto.wgpb.LogLevel}
 */
proto.wgpb.Logging.prototype.getLevel = function() {
  return /** @type {!proto.wgpb.LogLevel} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.wgpb.LogLevel} value
 * @return {!proto.wgpb.Logging} returns this
 */
proto.wgpb.Logging.prototype.setLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wgpb.Api.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wgpb.Api.prototype.toObject = function(opt_includeInstance) {
  return proto.wgpb.Api.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wgpb.Api} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.Api.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    engineConfiguration: (f = msg.getEngineConfiguration()) && proto.wgpb.EngineConfiguration.toObject(includeInstance, f),
    enableSingleFlight: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    enableGraphqlEndpoint: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    operationsList: jspb.Message.toObjectList(msg.getOperationsList(),
    proto.wgpb.Operation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wgpb.Api}
 */
proto.wgpb.Api.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wgpb.Api;
  return proto.wgpb.Api.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wgpb.Api} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wgpb.Api}
 */
proto.wgpb.Api.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.wgpb.EngineConfiguration;
      reader.readMessage(value,proto.wgpb.EngineConfiguration.deserializeBinaryFromReader);
      msg.setEngineConfiguration(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableSingleFlight(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableGraphqlEndpoint(value);
      break;
    case 5:
      var value = new proto.wgpb.Operation;
      reader.readMessage(value,proto.wgpb.Operation.deserializeBinaryFromReader);
      msg.addOperations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wgpb.Api.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wgpb.Api.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wgpb.Api} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.Api.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEngineConfiguration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wgpb.EngineConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getEnableSingleFlight();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getEnableGraphqlEndpoint();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.wgpb.Operation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.wgpb.Api.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wgpb.Api} returns this
 */
proto.wgpb.Api.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EngineConfiguration engine_configuration = 2;
 * @return {?proto.wgpb.EngineConfiguration}
 */
proto.wgpb.Api.prototype.getEngineConfiguration = function() {
  return /** @type{?proto.wgpb.EngineConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.wgpb.EngineConfiguration, 2));
};


/**
 * @param {?proto.wgpb.EngineConfiguration|undefined} value
 * @return {!proto.wgpb.Api} returns this
*/
proto.wgpb.Api.prototype.setEngineConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wgpb.Api} returns this
 */
proto.wgpb.Api.prototype.clearEngineConfiguration = function() {
  return this.setEngineConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wgpb.Api.prototype.hasEngineConfiguration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool enable_single_flight = 3;
 * @return {boolean}
 */
proto.wgpb.Api.prototype.getEnableSingleFlight = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.wgpb.Api} returns this
 */
proto.wgpb.Api.prototype.setEnableSingleFlight = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool enable_graphql_endpoint = 4;
 * @return {boolean}
 */
proto.wgpb.Api.prototype.getEnableGraphqlEndpoint = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.wgpb.Api} returns this
 */
proto.wgpb.Api.prototype.setEnableGraphqlEndpoint = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * repeated Operation operations = 5;
 * @return {!Array<!proto.wgpb.Operation>}
 */
proto.wgpb.Api.prototype.getOperationsList = function() {
  return /** @type{!Array<!proto.wgpb.Operation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.wgpb.Operation, 5));
};


/**
 * @param {!Array<!proto.wgpb.Operation>} value
 * @return {!proto.wgpb.Api} returns this
*/
proto.wgpb.Api.prototype.setOperationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.wgpb.Operation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wgpb.Operation}
 */
proto.wgpb.Api.prototype.addOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.wgpb.Operation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wgpb.Api} returns this
 */
proto.wgpb.Api.prototype.clearOperationsList = function() {
  return this.setOperationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wgpb.Operation.prototype.toObject = function(opt_includeInstance) {
  return proto.wgpb.Operation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wgpb.Operation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.Operation.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    content: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wgpb.Operation}
 */
proto.wgpb.Operation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wgpb.Operation;
  return proto.wgpb.Operation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wgpb.Operation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wgpb.Operation}
 */
proto.wgpb.Operation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wgpb.Operation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wgpb.Operation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wgpb.Operation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.Operation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.wgpb.Operation.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wgpb.Operation} returns this
 */
proto.wgpb.Operation.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string content = 2;
 * @return {string}
 */
proto.wgpb.Operation.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wgpb.Operation} returns this
 */
proto.wgpb.Operation.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wgpb.EngineConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.wgpb.EngineConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wgpb.EngineConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.EngineConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultFlushInterval: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wgpb.EngineConfiguration}
 */
proto.wgpb.EngineConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wgpb.EngineConfiguration;
  return proto.wgpb.EngineConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wgpb.EngineConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wgpb.EngineConfiguration}
 */
proto.wgpb.EngineConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDefaultFlushInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wgpb.EngineConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wgpb.EngineConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wgpb.EngineConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wgpb.EngineConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultFlushInterval();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 default_flush_interval = 1;
 * @return {number}
 */
proto.wgpb.EngineConfiguration.prototype.getDefaultFlushInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.wgpb.EngineConfiguration} returns this
 */
proto.wgpb.EngineConfiguration.prototype.setDefaultFlushInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.wgpb.LogLevel = {
  DEBUG: 0,
  INFO: 1,
  ERROR: 2,
  WARNING: 3,
  PANIC: 4,
  FATAL: 5
};

goog.object.extend(exports, proto.wgpb);
